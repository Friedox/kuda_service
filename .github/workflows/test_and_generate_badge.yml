name: Test and Generate Coverage Badge

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-and-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Create .env file from secrets
        run: |
          echo APP_CONFIG__DATABASE__DB_USER=${{ secrets.APP_CONFIG__DATABASE__DB_USER }} > ./backend/.env
          echo APP_CONFIG__DATABASE__DB_PASSWORD=${{ secrets.APP_CONFIG__DATABASE__DB_PASSWORD }} >> ./backend/.env
          echo APP_CONFIG__GEOCODER__PATH_API_KEY=${{ secrets.APP_CONFIG__GEOCODER__PATH_API_KEY }} >> ./backend/.env
          echo APP_CONFIG__DATABASE__DB_NAME=${{ secrets.APP_CONFIG__DATABASE__DB_NAME }} >> ./backend/.env
          echo APP_CONFIG__DATABASE__DB_HOST=nothing >> ./backend/.env
          echo APP_CONFIG__TEST_DATABASE__DB_USER=${{ secrets.APP_CONFIG__TEST_DATABASE__DB_USER }} >> ./backend/.env
          echo APP_CONFIG__TEST_DATABASE__DB_PASSWORD=${{ secrets.APP_CONFIG__TEST_DATABASE__DB_PASSWORD }} >> ./backend/.env
          echo APP_CONFIG__TEST_DATABASE__DB_NAME=${{ secrets.APP_CONFIG__TEST_DATABASE__DB_NAME }} >> ./backend/.env
          echo APP_CONFIG__TEST_DATABASE__DB_HOST=${{ secrets.APP_CONFIG__TEST_DATABASE__DB_HOST }} >> ./backend/.env
          echo APP_CONFIG__ENV__IS_TEST=1 >> ./backend/.env
          echo APP_CONFIG__GEOCODER__API_KEY=${{ secrets.APP_CONFIG__GEOCODER__API_KEY }} >> ./backend/.env
          echo APP_CONFIG__GEOCODER__URL=${{ secrets.APP_CONFIG__GEOCODER__URL }} >> ./backend/.env
          echo APP_CONFIG__GOOGLE__CLIENT_ID=${{ secrets.APP_CONFIG__GOOGLE__CLIENT_ID }} >> ./backend/.env
          echo APP_CONFIG__GOOGLE__CLIENT_SECRET=${{ secrets.APP_CONFIG__GOOGLE__CLIENT_SECRET }} >> ./backend/.env
          echo APP_CONFIG__GOOGLE__REDIRECT_URI=${{ secrets.APP_CONFIG__GOOGLE__REDIRECT_URI }} >> ./backend/.env
          echo APP_CONFIG__REDIS__HOST=${{ secrets.APP_CONFIG__REDIS__HOST }} >> ./backend/.env
          echo APP_CONFIG__REDIS__EXPIRE_TIME=${{ secrets.APP_CONFIG__REDIS__EXPIRE_TIME }} >> ./backend/.env
          chmod 600 ./backend/.env

      - name: Set up Docker Compose
        run: |
          docker compose --env-file ./backend/.env -f docker-compose.test.yml up --build -d

      - name: Install dependencies
        run: |
          cd ./backend
          poetry install
          cd app
          poetry run alembic upgrade head
          ls
          echo "------"

      - name: Run tests with coverage
        run: |
          cd ./backend/app
          poetry run coverage run --data-file=.coverage_file -m pytest tests
          poetry run coverage xml --data-file=.coverage_file -o coverage_out.xml

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: "./backend/app/coverage_out.xml"

      - name: Cleanup
        run: docker compose -f docker-compose.test.yml down
